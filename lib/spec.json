{
    "openapi": "3.0.0",
    "info": {
        "description": "The monitor service implements all monitor functions for GroupAlarm\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
        "title": "groupalarm Monitor API",
        "version": "1.16.0",
        "x-logo": {
            "url": "https://www.groupalarm.com/favicon/logo_512.png"
        }
    },
    "paths": {
        "/": {
            "get": {
                "description": "Returns all monitors for the given organization",
                "tags": [
                    "monitor"
                ],
                "operationId": "ListMonitors",
                "parameters": [
                    {
                        "description": "ID of the organization of which the monitors should be listed",
                        "name": "organization",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "array of all monitors for the given organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "Definition of a Monitor",
                                        "type": "object",
                                        "properties": {
                                            "configuration": {
                                                "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "x-go-package": "groupalarm.com/go/common"
                                            },
                                            "id": {
                                                "description": "The internal ID of the Monitor",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "name": {
                                                "description": "The name of the Monitor that is displayed in the UI",
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "organizationID": {
                                                "description": "The organization the Monitor is part of",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "OrganizationID"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/monitor/api/services"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "organization ID is missing or in wrong format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "query parameter 'organization' is not numeric"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Fehler beim auslesen der Monitore"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a given monitor with new values",
                "tags": [
                    "monitor"
                ],
                "operationId": "EditMonitor",
                "responses": {
                    "200": {
                        "description": "the edited monitor with new values",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Definition of a Monitor",
                                    "type": "object",
                                    "properties": {
                                        "configuration": {
                                            "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "x-go-package": "groupalarm.com/go/common"
                                        },
                                        "id": {
                                            "description": "The internal ID of the Monitor",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "The name of the Monitor that is displayed in the UI",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "description": "The organization the Monitor is part of",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/monitor/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "monitor in wrong format or missing required field",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Erhaltene Daten entsprechen nicht dem erwarteten Format"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Fehler beim Aktualisieren des Eintrags"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Definition of a Monitor",
                                "type": "object",
                                "properties": {
                                    "configuration": {
                                        "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object"
                                        },
                                        "x-go-package": "groupalarm.com/go/common"
                                    },
                                    "id": {
                                        "description": "The internal ID of the Monitor",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "ID"
                                    },
                                    "name": {
                                        "description": "The name of the Monitor that is displayed in the UI",
                                        "type": "string",
                                        "x-go-name": "Name"
                                    },
                                    "organizationID": {
                                        "description": "The organization the Monitor is part of",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/monitor/api/services"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new Monitor",
                "tags": [
                    "monitor"
                ],
                "operationId": "CreateMonitor",
                "responses": {
                    "201": {
                        "description": "the created monitor with ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Definition of a Monitor",
                                    "type": "object",
                                    "properties": {
                                        "configuration": {
                                            "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "x-go-package": "groupalarm.com/go/common"
                                        },
                                        "id": {
                                            "description": "The internal ID of the Monitor",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "The name of the Monitor that is displayed in the UI",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "description": "The organization the Monitor is part of",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/monitor/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "monitor in wrong format or missing required field",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Erhaltene Daten entsprechen nicht dem erwarteten Format"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Fehler beim Erstellen des Eintrags"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Definition of a Monitor",
                                "type": "object",
                                "properties": {
                                    "configuration": {
                                        "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object"
                                        },
                                        "x-go-package": "groupalarm.com/go/common"
                                    },
                                    "id": {
                                        "description": "The internal ID of the Monitor",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "ID"
                                    },
                                    "name": {
                                        "description": "The name of the Monitor that is displayed in the UI",
                                        "type": "string",
                                        "x-go-name": "Name"
                                    },
                                    "organizationID": {
                                        "description": "The organization the Monitor is part of",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/monitor/api/services"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/{monitor_id}": {
            "get": {
                "description": "Returns the Monitor for the given Monitor-ID",
                "tags": [
                    "monitor"
                ],
                "operationId": "GetMonitor",
                "parameters": [
                    {
                        "description": "ID of the Monitor that should be fetched",
                        "name": "monitor_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "monitor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Definition of a Monitor",
                                    "type": "object",
                                    "properties": {
                                        "configuration": {
                                            "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "x-go-package": "groupalarm.com/go/common"
                                        },
                                        "id": {
                                            "description": "The internal ID of the Monitor",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "The name of the Monitor that is displayed in the UI",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "description": "The organization the Monitor is part of",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/monitor/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "monitor ID is missing or in wrong format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "path parameter 'id' is not numeric"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Fehler beim auslesen der Monitors"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the given monitor by ID",
                "tags": [
                    "monitor"
                ],
                "operationId": "DeleteMonitor",
                "parameters": [
                    {
                        "description": "The ID of the monitor that should be deleted",
                        "name": "monitor_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete monitor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Eintrag erfolgreich gelöscht"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "monitor id is missing or in wrong format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "path parameter 'id' is missing"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Fehler beim Löschen des Eintrags"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{monitor_id}/data": {
            "get": {
                "description": "Returns all data for a given monitor",
                "tags": [
                    "monitor-data"
                ],
                "operationId": "GetMonitorData",
                "parameters": [
                    {
                        "description": "The ID of the monitor",
                        "name": "monitor_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "mobile configurations for passed user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Definition of a MonitorData",
                                    "type": "object",
                                    "properties": {
                                        "alarmData": {
                                            "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "x-go-package": "groupalarm.com/go/common"
                                        },
                                        "incidentLog": {
                                            "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "x-go-package": "groupalarm.com/go/common"
                                        },
                                        "metaData": {
                                            "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "x-go-package": "groupalarm.com/go/common"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/monitor/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "owner ID is missing or in wrong format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "path parameter 'id' is missing"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Fehler beim Abruf des Eintrags"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{monitor_id}/data/alarming": {
            "post": {
                "description": "Create or overwrites the monitor alarming data",
                "tags": [
                    "monitor-data"
                ],
                "operationId": "SetMonitorDataAlarming",
                "parameters": [
                    {
                        "description": "ID of the monitor which data should be updated",
                        "name": "monitor_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Eintrag erfolgreich gespeichert"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "required parameter missing or in wrong format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "path parameter 'id' is not numeric"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Fehler beim setzen der Daten"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "awaitingResponses": {
                                        "type": "integer"
                                    },
                                    "event": {
                                        "type": "string"
                                    },
                                    "geo": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string"
                                            },
                                            "latitude": {
                                                "type": "integer"
                                            },
                                            "longitude": {
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "negativeResponses": {
                                        "type": "integer"
                                    },
                                    "positiveResponses": {
                                        "type": "integer"
                                    },
                                    "units": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "feedback": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "feedback": {
                                                                "description": "Feedback of the user:\n * 0 - Negative feedback\n * 1 - Positive feedback\n * 2 - Waiting for feedback\n",
                                                                "type": "number",
                                                                "enum": [
                                                                    0,
                                                                    1,
                                                                    2
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "color": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "position": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "awaitingResponses": 20,
                                    "event": "Brand in der Goethestraße",
                                    "geo": {
                                        "address": "Goethestraße 5, 52064 Aachen, Deutschland",
                                        "latitude": 50.77664,
                                        "longitude": 6.08342
                                    },
                                    "message": "Großbrand in der Goethestraße 5",
                                    "negativeResponses": 1,
                                    "positiveResponses": 2,
                                    "units": [
                                        {
                                            "feedback": [
                                                {
                                                    "feedback": 1,
                                                    "label": {
                                                        "color": null,
                                                        "name": "AGT"
                                                    },
                                                    "name": "Hans Peter",
                                                    "position": "AGT"
                                                },
                                                {
                                                    "feedback": 1,
                                                    "label": {
                                                        "color": null,
                                                        "name": "AGT"
                                                    },
                                                    "name": "Karl Blau",
                                                    "position": "AGT"
                                                },
                                                {
                                                    "feedback": 2,
                                                    "label": {
                                                        "color": null,
                                                        "name": "Helfer"
                                                    },
                                                    "name": "Jörg Schwarz",
                                                    "position": "Helfer"
                                                }
                                            ],
                                            "name": "Einheit 1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "required": true
                }
            },
            "patch": {
                "description": "Patches one or more field from the monitor alarming data",
                "tags": [
                    "monitor-data"
                ],
                "operationId": "UpdateMonitorDataAlarming",
                "parameters": [
                    {
                        "description": "ID of the monitor which data should be updated",
                        "name": "monitor_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Eintrag erfolgreich gespeichert"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "required parameter missing or in wrong format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "path parameter 'id' is missing"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Fehler beim Aktualisieren des Eintrags"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "awaitingResponses": {
                                        "type": "integer"
                                    },
                                    "event": {
                                        "type": "string"
                                    },
                                    "geo": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string"
                                            },
                                            "latitude": {
                                                "type": "integer"
                                            },
                                            "longitude": {
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "negativeResponses": {
                                        "type": "integer"
                                    },
                                    "positiveResponses": {
                                        "type": "integer"
                                    },
                                    "units": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "feedback": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "feedback": {
                                                                "description": "Feedback of the user:\n * 0 - Negative feedback\n * 1 - Positive feedback\n * 2 - Waiting for feedback\n",
                                                                "type": "number",
                                                                "enum": [
                                                                    0,
                                                                    1,
                                                                    2
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "color": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "position": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "awaitingResponses": 5,
                                    "positiveResponses": 10
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{monitor_id}/data/meta": {
            "post": {
                "description": "Create or overwrites the monitor meta data",
                "tags": [
                    "monitor-data"
                ],
                "operationId": "SetMonitorDataMeta",
                "parameters": [
                    {
                        "description": "ID of the monitor which data should be updated",
                        "name": "monitor_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Eintrag erfolgreich gespeichert"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "required parameter missing or in wrong format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "path parameter 'id' is not numeric"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Fehler beim Erstellen des Eintrags"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "latestAlarms": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "pagers": {
                                        "type": "object",
                                        "properties": {
                                            "activePager": {
                                                "type": "integer"
                                            },
                                            "inactivePager": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "latestAlarms": [
                                        "Brand in Aachen",
                                        "Unfall auf der Autobahn A4"
                                    ],
                                    "pagers": {
                                        "activePager": 10,
                                        "inactivePager": 0
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            },
            "patch": {
                "description": "Patches one or more field from the monitor meta data",
                "tags": [
                    "monitor-data"
                ],
                "operationId": "UpdateMonitorDataMeta",
                "parameters": [
                    {
                        "description": "ID of the monitor which data should be updated",
                        "name": "monitor_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Eintrag erfolgreich gespeichert"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "required parameter missing or in wrong format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "path parameter 'id' is not numeric"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "Fehler beim Aktualisieren des Eintrags"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "latestAlarms": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "pagers": {
                                        "type": "object",
                                        "properties": {
                                            "activePager": {
                                                "type": "integer"
                                            },
                                            "inactivePager": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "pagers": {
                                        "activePager": 5
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://app.groupalarm.com/api/v1/monitor"
        }
    ],
    "components": {
        "securitySchemes": {
            "API_Token": {
                "description": "To use this API, you need an API-Token from the RBAC settings of your GroupAlarm organization. Place the token inside the HTTP-Header `API-Token` for every request, otherwise the API will return an \"401 Unauthorized\" error for your request.",
                "type": "apiKey",
                "name": "API-TOKEN",
                "in": "header"
            },
            "Personal-Access-Token": {
                "description": "To use this API, you need a Personal Access Token from your profile settings. Place the token inside the HTTP-Header `Personal-Access-Token` for every request, otherwise the API will return an \"401 Unauthorized\" error for your request.",
                "type": "apiKey",
                "name": "Personal-Access-Token",
                "in": "header"
            }
        },
        "schemas": {
            "AccessAllowedResponse": {
                "description": "AccessAllowedResponse contains whether the organization allows access or not",
                "type": "object",
                "properties": {
                    "accessAllowed": {
                        "type": "boolean",
                        "x-go-name": "AccessAllowed"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "EventCreationItem": {
                "description": "EventCreationItem is used by the different services to create a new audit-log item",
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "x-go-name": "Data"
                    },
                    "organizationID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "service": {
                        "type": "string",
                        "x-go-name": "Service"
                    },
                    "type": {
                        "type": "string",
                        "x-go-name": "Type"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "EventList": {
                "description": "An EventList contains multiple EventListItems and a TotalEvents count used for pagination",
                "type": "object",
                "properties": {
                    "events": {
                        "description": "event array with events",
                        "type": "array",
                        "items": {
                            "description": "An EventListItem is used as a single audit-log entry in an EventList",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "data for view",
                                    "type": "string",
                                    "x-go-name": "Data"
                                },
                                "id": {
                                    "description": "id of this item",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "organizationID": {
                                    "description": "connected organization as ID",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                },
                                "service": {
                                    "description": "affected service / entity-type",
                                    "type": "string",
                                    "x-go-name": "Service"
                                },
                                "timestamp": {
                                    "description": "timestamp, when action was logged",
                                    "type": "string",
                                    "x-go-name": "Timestamp"
                                },
                                "type": {
                                    "description": "action type [create, edit, delete]",
                                    "type": "string",
                                    "x-go-name": "Type"
                                },
                                "user": {
                                    "description": "User is a basic copy of user-service's PublicUser",
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "type": "string",
                                            "x-go-name": "EMail"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "surname": {
                                            "type": "string",
                                            "x-go-name": "Surname"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/audit/api/services"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/audit/api/services"
                        },
                        "x-go-name": "Events"
                    },
                    "totalEvents": {
                        "description": "total amount of events inside the events array",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalEvents"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "EventListItem": {
                "description": "An EventListItem is used as a single audit-log entry in an EventList",
                "type": "object",
                "properties": {
                    "data": {
                        "description": "data for view",
                        "type": "string",
                        "x-go-name": "Data"
                    },
                    "id": {
                        "description": "id of this item",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "organizationID": {
                        "description": "connected organization as ID",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "service": {
                        "description": "affected service / entity-type",
                        "type": "string",
                        "x-go-name": "Service"
                    },
                    "timestamp": {
                        "description": "timestamp, when action was logged",
                        "type": "string",
                        "x-go-name": "Timestamp"
                    },
                    "type": {
                        "description": "action type [create, edit, delete]",
                        "type": "string",
                        "x-go-name": "Type"
                    },
                    "user": {
                        "description": "User is a basic copy of user-service's PublicUser",
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "x-go-name": "EMail"
                            },
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "ID"
                            },
                            "name": {
                                "type": "string",
                                "x-go-name": "Name"
                            },
                            "surname": {
                                "type": "string",
                                "x-go-name": "Surname"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/audit/api/services"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "EventService": {
                "description": "EventService provides all methods needed to list and create audit-log entries",
                "type": "object",
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "Feature": {
                "description": "Feature contains all information about a single feature",
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string",
                        "x-go-name": "Category"
                    },
                    "categoryDisplayName": {
                        "type": "string",
                        "x-go-name": "CategoryDisplayName"
                    },
                    "color": {
                        "type": "string",
                        "x-go-name": "Color"
                    },
                    "defaultPrice": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "DefaultPrice"
                    },
                    "description": {
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "displayName": {
                        "type": "string",
                        "x-go-name": "DisplayName"
                    },
                    "icon": {
                        "type": "string",
                        "x-go-name": "Icon"
                    },
                    "markedForDeactivation": {
                        "type": "boolean",
                        "x-go-name": "MarkedForDeactivation"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    }
                },
                "x-go-package": "groupalarm.com/go/shop/api/services"
            },
            "FeatureRegistryService": {
                "description": "FeatureRegistryService provides all functions needed to manage a feature registry",
                "type": "object",
                "x-go-package": "groupalarm.com/go/shop/api/services"
            },
            "MergedUserRole": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "organizationID"
                            ],
                            "properties": {
                                "description": {
                                    "description": "Optional description for this role",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "id": {
                                    "description": "ID for this role",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "ID"
                                },
                                "name": {
                                    "description": "Name for this role",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "organizationID": {
                                    "description": "Connected organization ID",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "OrganizationID"
                                },
                                "role_access": {
                                    "type": "array",
                                    "items": {
                                        "description": "This is used for user to role assignment",
                                        "type": "object",
                                        "title": "Definition of a user-role payload",
                                        "required": [
                                            "endpoints",
                                            "methods"
                                        ],
                                        "properties": {
                                            "endpoints": {
                                                "description": "Concerning endpoints/services",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "x-go-name": "Endpoints"
                                            },
                                            "id": {
                                                "description": "ID of this role access",
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1,
                                                "x-go-name": "ID"
                                            },
                                            "methods": {
                                                "description": "Allowed HTTP methods",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "x-go-name": "Methods"
                                            },
                                            "roleID": {
                                                "description": "ID of the role",
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1,
                                                "x-go-name": "RoleID"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/rbac/api/services"
                                    },
                                    "x-go-name": "RoleAccess"
                                },
                                "type": {
                                    "description": "Definition of default organization roles",
                                    "type": "string",
                                    "x-go-name": "Type"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/rbac/api/services"
                        },
                        "x-go-name": "Roles"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "Monitor": {
                "description": "Definition of a Monitor",
                "type": "object",
                "properties": {
                    "configuration": {
                        "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "x-go-package": "groupalarm.com/go/common"
                    },
                    "id": {
                        "description": "The internal ID of the Monitor",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "The name of the Monitor that is displayed in the UI",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "The organization the Monitor is part of",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    }
                },
                "x-go-package": "groupalarm.com/go/monitor/api/services"
            },
            "MonitorData": {
                "description": "Definition of a MonitorData",
                "type": "object",
                "properties": {
                    "alarmData": {
                        "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "x-go-package": "groupalarm.com/go/common"
                    },
                    "incidentLog": {
                        "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "x-go-package": "groupalarm.com/go/common"
                    },
                    "metaData": {
                        "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "x-go-package": "groupalarm.com/go/common"
                    }
                },
                "x-go-package": "groupalarm.com/go/monitor/api/services"
            },
            "MonitorService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/monitor/api/services"
            },
            "OrganizationService": {
                "description": "OrganizationService provides all functions needed to check for expired accesses to organizations",
                "type": "object",
                "properties": {
                    "CheckForExpiredAccesses": {
                        "type": "string"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "PersonalAccessToken": {
                "description": "This is used for personal access token interaction",
                "type": "object",
                "title": "Definition of a personal access token payload",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "token": {
                        "type": "string",
                        "x-go-name": "Token"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PersonalAccessTokenRequest": {
                "description": "This is used for creation of personal access tokens",
                "type": "object",
                "title": "Definition of a personal access token request payload",
                "properties": {
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PersonalAccessTokenService": {
                "description": "PersonalAccessTokenService contains all methods needed to implement our service",
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresEventService": {
                "description": "PostgresEventService is our implementation of EventService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "PostgresFeatureRegistryService": {
                "description": "PostgresFeatureRegistryService is our implementation of FeatureRegistryService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/shop/api/services"
            },
            "PostgresMonitorService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/monitor/api/services"
            },
            "PostgresOrganizationService": {
                "description": "PostgresOrganizationService is our implementation of OrganizationService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "PostgresPersonalAccessTokenService": {
                "description": "PostgresPersonalAccessTokenService is our PersonalAccessTokenService implementation using a database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresRoleAccessService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresRoleService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresServiceService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresSupportAgentService": {
                "description": "PostgresSupportAgentService is our implementation of SupportAgentService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "PostgresTokenService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresUserRolesService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PropertyMap": {
                "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                },
                "x-go-package": "groupalarm.com/go/common"
            },
            "Role": {
                "description": "This is used for role interaction",
                "type": "object",
                "title": "Definition of a role payload",
                "required": [
                    "name",
                    "organizationID"
                ],
                "properties": {
                    "description": {
                        "description": "Optional description for this role",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "description": "ID for this role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "Name for this role",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    },
                    "type": {
                        "description": "Definition of default organization roles",
                        "type": "string",
                        "x-go-name": "Type"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleAccess": {
                "description": "This is used for user to role assignment",
                "type": "object",
                "title": "Definition of a user-role payload",
                "required": [
                    "endpoints",
                    "methods"
                ],
                "properties": {
                    "endpoints": {
                        "description": "Concerning endpoints/services",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Endpoints"
                    },
                    "id": {
                        "description": "ID of this role access",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "methods": {
                        "description": "Allowed HTTP methods",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Methods"
                    },
                    "roleID": {
                        "description": "ID of the role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "RoleID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleAccessService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleWithAccess": {
                "type": "object",
                "required": [
                    "name",
                    "organizationID"
                ],
                "properties": {
                    "description": {
                        "description": "Optional description for this role",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "description": "ID for this role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "Name for this role",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    },
                    "role_access": {
                        "type": "array",
                        "items": {
                            "description": "This is used for user to role assignment",
                            "type": "object",
                            "title": "Definition of a user-role payload",
                            "required": [
                                "endpoints",
                                "methods"
                            ],
                            "properties": {
                                "endpoints": {
                                    "description": "Concerning endpoints/services",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "x-go-name": "Endpoints"
                                },
                                "id": {
                                    "description": "ID of this role access",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "ID"
                                },
                                "methods": {
                                    "description": "Allowed HTTP methods",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "x-go-name": "Methods"
                                },
                                "roleID": {
                                    "description": "ID of the role",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "RoleID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/rbac/api/services"
                        },
                        "x-go-name": "RoleAccess"
                    },
                    "type": {
                        "description": "Definition of default organization roles",
                        "type": "string",
                        "x-go-name": "Type"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "Service": {
                "description": "This is used for service interaction",
                "type": "object",
                "title": "Definition of a service payload",
                "required": [
                    "name",
                    "description",
                    "methods"
                ],
                "properties": {
                    "description": {
                        "description": "Description of this service/endpoint",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "methods": {
                        "description": "Allowed methods for this service",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Methods"
                    },
                    "name": {
                        "description": "Name of this service/endpoint",
                        "type": "string",
                        "x-go-name": "Name"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "ServiceService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "SupportAgentResponse": {
                "description": "SupportAgentResponse contains whether the user is a support agent or not",
                "type": "object",
                "properties": {
                    "isSupportAgent": {
                        "type": "boolean",
                        "x-go-name": "IsSupportAgent"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "SupportAgentService": {
                "description": "SupportAgentService provides all functions needed to manage support agents",
                "type": "object",
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "SupportOrganization": {
                "description": "SupportOrganization represents a single organization and the timestamp when it allowed support agents to access it",
                "type": "object",
                "properties": {
                    "allowedTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "AllowedTimestamp"
                    },
                    "organizationId": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "organizationName": {
                        "type": "string",
                        "x-go-name": "OrganizationName"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "SupportOrganizationList": {
                "description": "A SupportOrganizationList contains multiple SupportOrganizations and a TotalSupportOrganization count used for pagination",
                "type": "object",
                "properties": {
                    "supportOrganizations": {
                        "type": "array",
                        "items": {
                            "description": "SupportOrganization represents a single organization and the timestamp when it allowed support agents to access it",
                            "type": "object",
                            "properties": {
                                "allowedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "x-go-name": "AllowedTimestamp"
                                },
                                "organizationId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                },
                                "organizationName": {
                                    "type": "string",
                                    "x-go-name": "OrganizationName"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/support/api/services"
                        },
                        "x-go-name": "SupportOrganizations"
                    },
                    "totalSupportOrganizations": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalSupportOrganizations"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "Token": {
                "description": "This is used for token interaction",
                "type": "object",
                "title": "Definition of a token payload",
                "required": [
                    "organizationID",
                    "name",
                    "token"
                ],
                "properties": {
                    "id": {
                        "description": "ID for this token",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "Name for this token",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    },
                    "token": {
                        "description": "Actual token",
                        "type": "string",
                        "x-go-name": "Token"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "TokenRequest": {
                "description": "This is used for creation of tokens",
                "type": "object",
                "title": "Definition of a token request payload",
                "required": [
                    "organizationID",
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Name for this token",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "TokenService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "User": {
                "description": "User is a basic copy of user-service's PublicUser",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "x-go-name": "EMail"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "surname": {
                        "type": "string",
                        "x-go-name": "Surname"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "UserRole": {
                "description": "This is used for user to role assignment",
                "type": "object",
                "title": "Definition of a user-role payload",
                "required": [
                    "userID",
                    "roleID"
                ],
                "properties": {
                    "roleID": {
                        "description": "ID of the role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "RoleID"
                    },
                    "userID": {
                        "description": "ID of the user",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "UserRolesService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            }
        }
    },
    "security": [
        {
            "API_Token": []
        },
        {
            "Personal-Access-Token": []
        }
    ]
}